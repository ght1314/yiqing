<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.AddressMapper">
    <select id="queryVisIdByparmas" parameterType="integer" resultType="integer">
        select add_id
        from tb_address
        where deleted = 0
          and add_house = #{house}
          and add_unit = #{unit}
    </select>

    <select id="queryAddressByParam" parameterType="string" resultType="com.demo.dto.AddressDto">
        select add_id,add_name,add_house,add_unit,add_count
        from tb_address
        <where>
            deleted = 0
            <if test="keyword != null and keyword != ''">
                and CONCAT(add_id,add_name) like CONCAT('%',#{keyword},'%')
            </if>
        </where>
    </select>

    <select id="queryAddressById" parameterType="integer" resultType="AddressDto">
        select *
        from tb_address
        where deleted = 0
          and add_id = #{addId}
    </select>

    <insert id="addAddress" parameterType="com.demo.dto.AddressDto">
        insert into tb_address(add_id, add_name, add_house, add_unit, add_count)
        values (#{addId}, #{addName}, #{addHouse}, #{addUnit}, #{addCount})
    </insert>
    <insert id="insertBatchResident">
        insert into tb_address(add_id, add_name, add_house, add_unit, add_count)
        values
        <foreach collection="addressList" item="address" index="index" separator=",">
            (#{address.addId}, #{address.addName}, #{address.addHouse}, #{address.addUnit}, #{address.addCount})
        </foreach>
    </insert>

    <update id="updateAddress" parameterType="com.demo.dto.AddressDto">
        update tb_address
        set add_name  = #{addName},
            add_house = #{addHouse},
            add_unit  = #{addUnit} add_count = #{addCount}
        where add_id = #{addId}
    </update>

    <update id="deleteAddress" parameterType="integer">
        update tb_address set deleted = 1
        where add_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </update>


</mapper>
